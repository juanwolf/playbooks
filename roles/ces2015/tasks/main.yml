---
- name: Verify db container is present
  docker_container:
    name: postgres
    state: started
    image: "postgres:{{ postgres_version }}"
    volumes:
      - "{{ postgres_volume_path }}:/var/lib/postgresql/data"
    env:
      POSTGRES_USER: "{{ postgres_username }}"
      POSTGRES_PASSWORD: "{{ postgres_password }}"
  become: yes
  become_user: "{{ server_user }}"

- name: Verify database is present
  docker_container:
    name: postgres_db_create
    state: started
    image: "postgres:{{ postgres_version }}"
    links:
      - postgres:postgres
    command: "psql -c 'CREATE DATABASE ces2015;'"
  register: ces2015_database
  ignore_errors: yes
  become: yes
  become_user: "{{ server_user }}"

- debug:
    msg: "Docker database command output: {{ ces2015_database }} "

- name: Login into docker registry
  docker_login:
    registry: "registry.gitlab.com"
    username: "{{ ces2015_registry_username }}"
    password: "{{ ces2015_registry_password }}"
  become: yes
  become_user: "{{ server_user }}"

- name: Recreate ces2015 container
  docker_container:
    name: "ces2015"
    image: "{{ ces2015_image }}:{{ ces2015_version }}"
    state: started
    recreate: yes
    pull: yes
    published_ports:
      - "127.0.0.1:8002:8000"
    volumes:
      - "/mnt/hd2/apps/ces2015/db.sqlite3:/opt/ces2015/db.sqlite3"
    env:
      SECRET_KEY: "{{ ces2015_secret_key }}"
      # DEBUG: True
  become: yes
  become_user: "{{ server_user }}"
